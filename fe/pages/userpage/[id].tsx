import BackBtn from '@/components/button/BackPageBtn';
import SubmitBtn from '@/components/button/SubmitBtn';
import RatingCard, {
  RatingCardProps,
} from '@/components/middleCards/RatingCard';
import PairingCardController from '@/components/pairing/PairingCardController';
import { useRouter } from 'next/router';
import axios from '@/pages/api/axios';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { accessToken, userNickname } from '@/atoms/login';
import { useRecoilState } from 'recoil';
import Link from 'next/link';
import Image from 'next/image';
export default function UserPage() {
  const [pariginCardPops, setPairingCardProps] = useState<any>();
  const [ratingList, setRatingList] = useState<RatingCardProps[]>([]);
  const [userName, setUserName] = useState();
  const [paringCount, setParingCount] = useState();
  const [ratingCount, setRatingCount] = useState();
  const [commentCount, setCommentCount] = useState();
  const [followingCount, setFollowingCount] = useState();
  const [followerCount, setFollowerCount] = useState();
  const [userImg, setUserImg] = useState('');
  const [page, setPage] = useState<number>(1);
  const [totalPages, setTotalPages] = useState<number>(1);
  const [TOKEN] = useRecoilState(accessToken);
  const [username] = useRecoilState(userNickname);
  const router = useRouter();
  useEffect(() => {
    axios
      .get(`/api/user/${router.query.userId}`)
      .then((response) => {
        console.log(response);
        setUserName(response.data.nickname);
        setParingCount(response.data.pairingCount);
        setRatingCount(response.data.ratingCount);
        setCommentCount(response.data.commentCount);
        setFollowerCount(response.data.followerCount);
        setFollowingCount(response.data.followingCount);
        setUserImg(response.data.imgUrl);
      })
      .catch((error) => console.log(error));
  }, []);
  useEffect(() => {
    axios
      .get(`/api/user/${router.query.userId}/pairings`)
      .then((response) => {
        setPairingCardProps(response.data.data);
        setTotalPages(response.data.pageInfo.totalPages);
      })
      .catch((error) => console.log(error));
  }, []);
  useEffect(() => {
    axios
      .get('/api/user/1/ratings')
      .then((res) => {
        setRatingList(res.data.data);
        setTotalPages(res.data.pageInfo.totalPages);
      })
      .catch((err) => console.log(err));
  }, []);
  const [curTab, setCurTab] = useState(0);
  const tabArr = [
    {
      name: '평가',
      content: (
        <div className="mt-3">
          {ratingList.map((el: RatingCardProps) => {
            return (
              <Link key={el.ratingId} href={`/rating/${el.ratingId}`}>
                <div className="border border-y-lightGray rounded-lg px-3 py-4 m-2">
                  <RatingCard
                    cardProps={el}
                    isMine={false}
                    count={el.commentCount}
                  />
                </div>
              </Link>
            );
          })}
        </div>
      ),
    },
    {
      name: '페어링',
      content: <PairingCardController pairingCardProps={pariginCardPops} />,
    },
  ];
  return (
    <>
      <Head>
        <title>GetABeer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo.png" />
      </Head>
      <main className="m-auto h-screen max-w-md">
        <BackBtn></BackBtn>
        <div>
          <div className="flex gap-3 p-2 justify-center">
            <div className="relative rounded-full w-20 h-20 self-center">
              <Image
                alt="user profile image"
                src={userImg}
                fill
                className="object-cover"
              />
            </div>
            <div className="p-1 self-center">
              <div>{userName}님</div>
              <div className="text-xs mb-2">
                평가{ratingCount} 페어링{paringCount} 댓글{commentCount}
              </div>
              <div className="flex gap-2">
                <div
                  className="bg-y-cream py-2 px-3 rounded-lg text-xs cursor-pointer"
                  onClick={() => router.push('/follower/1')}
                >
                  {followerCount} 팔로워
                </div>
                <div className="bg-y-cream py-2 px-3 rounded-lg text-xs cursor-pointer">
                  {followingCount} 팔로잉
                </div>
              </div>
            </div>
          </div>
          <SubmitBtn onClick={undefined}>팔로우</SubmitBtn>
        </div>
        <div className="border rounded-lg m-1 p-2">
          <ul className="flex justify-around mt-1 mb-4">
            {tabArr.map((el, idx) => {
              return (
                <li
                  key={idx}
                  className={
                    curTab === idx
                      ? 'text-y-brown border-b-2 border-y-brown px-2 cursor-pointer'
                      : 'text-y-gray px-2 cursor-pointer'
                  }
                  onClick={() => setCurTab(idx)}
                >
                  {el.name}
                </li>
              );
            })}
          </ul>
          {tabArr[curTab].content}
        </div>
      </main>
    </>
  );
}
