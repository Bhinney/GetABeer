import Head from 'next/head';
import Image from 'next/image';
import SmallCardController from '@/components/smallCards/SmallCardController';
import SmallPairingController from '@/components/smallCards/SmallpairingController';
import SimilarBeerController from '@/components/smallCards/SimilarBeerController';
import RatingTitle from '@/components/beerPage/RatingTitle';
import PairingTitle from '@/components/beerPage/PairingTitle';
import BeerDetailCard from '@/components/beerPage/BeerDetailCard';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { useRecoilState } from 'recoil';
import { currentBeer } from '@/atoms/currentBeer';
import axios from '@/pages/api/axios';

export default function Beer() {
  let router = useRouter();
  const [curRoute, setCurRoute] = useState<any>();
  useEffect(() => {
    setCurRoute(router.query.id);
  }, [router, curRoute]);

  const [beerInfo, setBeerInfo] = useState<any>();
  const [, setCurBeer] = useRecoilState(currentBeer);
  const [commentInfo, setCommentInfo] = useState<any>();
  const [pairingInfo, setPairingInfo] = useState<any>();
  const [similarBeer, setSimilarBeer] = useState<any>();
  useEffect(() => {
    // 특정 맥주 조회
    if (curRoute !== undefined) {
      axios
        .get(`/beers/${curRoute}`)
        .then((response) => {
          setBeerInfo(response.data);
          setCurBeer(response.data);
          setSimilarBeer(response.data.similarBeers);
        })
        .catch((error) => console.log(error));
    }
  }, [curRoute, setCurBeer]);

  useEffect(() => {
    // 코멘트 페이지 조회
    if (curRoute !== undefined) {
      axios
        .get(`/ratings/page/recency?beerId=${curRoute}&page=1&size=5`)
        .then((response) => setCommentInfo(response.data))
        .catch((error) => console.log(error));
    }
  }, [curRoute]);

  useEffect(() => {
    // 페어링 페이지 조회
    if (curRoute !== undefined) {
      axios
        .get(`/pairings/page/recency?beerId=${curRoute}&page=1&size=5`)
        .then((response) => {
          setPairingInfo(response.data);
        })
        .catch((error) => console.log(error));
    }
  }, [curRoute]);
  const BeerList = [
    {
      id: 1,
      title: '가든 바이젠',
      category: '에일',
      country: '한국',
      level: 4.1,
      ibu: 17.5,
      image: 'https://worldbeermarket.kr/userfiles/prdimg/2101060009_M.jpg',
    },
    {
      id: 2,
      title: '필라이트',
      category: '에일',
      country: '한국',
      level: 4.1,
      ibu: 17.5,
      image: 'https://worldbeermarket.kr/userfiles/prdimg/2211160004_R.jpg',
    },
    {
      id: 3,
      title: '가든 바이젠',
      category: '에일',
      country: '한국',
      level: 4.1,
      ibu: 17.5,
      image: 'https://worldbeermarket.kr/userfiles/prdimg/2011190018_M.jpg',
    },
  ];

  return (
    <>
      <Head>
        <title>GetABeer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo.png" />
      </Head>

      <main className="m-auto h-screen max-w-4xl relative">
        <Image
          className="w-full h-screen left-0 top-0 fixed -z-10 select-none"
          src="/images/background.png"
          alt="bg"
          width={500}
          height={500}
        />

        <div className="m-3">
          {/* 맥주 등록 이미지 없다. 현재 썸네일 이미지 경로 따로 없는 상태*/}
          <BeerDetailCard cardProps={beerInfo} />
        </div>

        <RatingTitle
          ratingCount={commentInfo?.pageInfo?.totalElements}
          beerId={curRoute}
        />
        <SmallCardController cardProps={commentInfo?.data} />

        <PairingTitle
          pairngCount={pairingInfo?.pageInfo?.totalElements}
          beerId={curRoute}
        />
        <SmallPairingController pairProps={pairingInfo?.data} />

        <SimilarBeerController beerProps={BeerList} />
      </main>
    </>
  );
}
