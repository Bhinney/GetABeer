import Head from 'next/head';
import SortBox, { Sort } from '@/components/selectBox/SortBox';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import PairingBox from '@/components/selectBox/PairingBox';
import PairingCardController from '@/components/pairing/PairingCardController';
import axios from '@/pages/api/axios';
import Pagenation from '@/components/Pagenation';
import Image from 'next/image';
import { useRecoilState } from 'recoil';
import BackBtn from '@/components/button/BackPageBtn';
import { accessToken } from '@/atoms/login';

export default function AllPairing() {
  let router = useRouter();
  const [TOKEN] = useRecoilState<string>(accessToken);
  const [curRoute, setCurRoute] = useState<any>();
  const [sort, setSort] = useState<Sort>('mostlikes');
  const [title, setTitle] = useState<string>('');
  const [category, setCategory] = useState<string>('ALL');
  const [pairingCardProps, setPairingCardProps] = useState<any>();
  const [page, setPage] = useState<number>(1);
  const [totalPages, setTotalPages] = useState<number>(1);

  useEffect(() => {
    setCurRoute(router.query.id);
  }, [router, curRoute]);

  useEffect(() => {
    if (curRoute !== undefined) {
      let tmpCategory = category.toLowerCase();
      if (TOKEN !== '') {
        const config = {
          headers: { Authorization: TOKEN, 'Content-Type': 'application/json' },
          withCredentials: true,
        };
        axios
          .get(
            `/api/pairings/page/${sort}/${tmpCategory}?beerId=${curRoute}&page=${page}&size=5`,
            config
          )
          .then((response) => {
            setPairingCardProps(response.data);
            setTotalPages(response.data.pageInfo.totalPages);
            setTitle(response.data.pageInfo.beerKorName);
          })
          .catch((error) => console.log(error));
      }
    }
  }, [curRoute, sort, page, category, TOKEN]);

  return (
    <>
      <Head>
        <title>GetABeer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo.png" />
      </Head>
      <main className="m-auto h-screen max-w-4xl relative">
        <BackBtn />
        <div className="mt-4 text-center bg-white rounded-lg max-w-4xl font-semibold">
          {title}
        </div>
        <div className="my-6 flex">
          <SortBox setSort={setSort} />
          <PairingBox setCategory={setCategory} />
        </div>
        {pairingCardProps?.data?.length > 0 ? (
          <>
            <PairingCardController pairingCardProps={pairingCardProps?.data} />
            <Pagenation page={page} setPage={setPage} totalPages={totalPages} />
            <div className="pb-32"></div>
          </>
        ) : (
          <div className="flex flex-col justify-center items-center rounded-lg bg-y-lightGray py-5">
            <Image
              className="m-auto pb-3 opacity-50"
              src="/images/logo.png"
              alt="logo"
              width={100}
              height={100}
            />
            <span>등록된 페어링이 없습니다</span>
          </div>
        )}
      </main>
    </>
  );
}
